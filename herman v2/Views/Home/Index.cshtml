@model herman_v2.Models.Dashboard

@{
    ViewBag.Title = "Index";
}

@using herman_v2.Controllers;

<p>
    @if (HomeController.CanEdit())
    {
        @Html.ActionLink("Add Video", "AddVideo");
    }
</p>
<p>
    @using (Html.BeginForm("Index", "Home"))
    {
        @Html.TextBox("search", "", new { @class = "form-control" }) <input type="submit" name="submit" value="Search" class="btn btn-primary" />
    }
</p>
<table class="table">
    <tr>
        <td>VHS:</td>
        <td>@Model.CountVHS</td>
        <td rowspan="5">
            @foreach (var item in Model.Top5)
            {
                @Html.ActionLink(item.actor_first_name + " " + item.actor_last_name, "ViewActor", new { id = item.actor_id })
                @: . . . . . . .
                @item.cnt
                @:<br />
            }

        </td>

    </tr>
    <tr><td>DVD:</td><td>@Model.CountDVD</td></tr>
    <tr><td>Bluray:</td><td>@Model.CountBluray</td></tr>
    <tr><td>Digital:</td><td>@Model.CountDIGITAL</td></tr>
    <tr><td>Total Titles:</td><td>@Model.CountTotal</td></tr>
</table>
<p class="h4">Featured Videos</p>
<div class="table" style="background-color:inherit;">
    @foreach (var item in Model.Vmm)
    {
        <div class="row">
            <div class="col-lg-1 cover">
                <a href="@Url.Action("VideoDetails", new { id = item.video_id })">
                    @if (item.Box_Cover.Contains("https"))
                    {
                        <img src="@Html.DisplayFor(modelItem => item.Box_Cover)" class="cover" />
                    }
                    else
                    {
                        <img src="http://h7.hopto.org/herman/images/@Html.DisplayFor(modelItem => item.Box_Cover)" class="cover" />
                    }
                </a>
            </div>
            <div class="col-lg-10">
                <div class="VideoTitle">
                    @Html.ActionLink(item.Video_Name, "VideoDetails", new { id = item.video_id })
                </div>
                <p>
                    @Html.ActionLink(item.dir_fullname, "ViewDirector", "Home", new { id = item.dir_id })
                    -
                    @Html.DisplayFor(modelItem => item.Release_Date)
                </p>
                <div class="col-lg-8 formatcolumn">
                    @Html.Raw(FormatHelper.GetMediaFormat(item.VHS, "VHS"))
                    @Html.Raw(FormatHelper.GetMediaFormat(item.DVD, "DVD"))
                    @Html.Raw(FormatHelper.GetMediaFormat(item.BLURAY, "BLURAY"))
                    @Html.Raw(FormatHelper.GetMediaFormat(item.DIGITAL, "DIGITAL"))
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12 plot">
                @Html.DisplayFor(modelItem => item.Plot)
            </div>
        </div>
    }

</div>

@if (Model.search == "false")
{
    <p class="h4">Recent Videos</p>
    <div class="table">
        @foreach (var item in Model.Recent)
        {
            <div class="row">
                <div class="col-lg-1 cover">
                    @if (item.Box_Cover.Contains("https"))
                    {
                        <img src="@Html.DisplayFor(modelItem => item.Box_Cover)" class="cover" />
                    }
                    else
                    {
                        <img src="http://h7.hopto.org/herman/images/@Html.DisplayFor(modelItem => item.Box_Cover)" class="cover" />
                    }
                </div>

                <div class="col-lg-3">
                    <div class="VideoTitle">
                        @Html.ActionLink(item.Video_Name, "VideoDetails", new { id = item.video_id })
                    </div>
                    <p>
                        @Html.ActionLink(item.dir_fullname, "ViewDirector", "Home", new { id = item.dir_id })
                        -
                        @Html.DisplayFor(modelItem => item.Release_Date)
                    </p>
                </div>
                <div class="col-lg-8 formatcolumn">
                    @Html.Raw(FormatHelper.GetMediaFormat(item.VHS, "VHS"))
                    @Html.Raw(FormatHelper.GetMediaFormat(item.DVD, "DVD"))
                    @Html.Raw(FormatHelper.GetMediaFormat(item.BLURAY, "BLURAY"))
                    @Html.Raw(FormatHelper.GetMediaFormat(item.DIGITAL, "DIGITAL"))
                </div>
            </div>

            <div class="row">
                <div class="col-lg-12">
                    @Html.DisplayFor(modelItem => item.Plot)
                </div>
            </div>
        }

    </div>

}